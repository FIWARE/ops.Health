#!/bin/sh
#
# Copyright 2015 TelefÃ³nica I+D
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

#
# FiHealth Dashboard web server
#
# Usage:
#     $0 start|stop|restart|status
#     $0 --help
#
# Options:
#     -h, --help	show this help message
#

OPTS='h(help)'
NAME=$(basename $0)
DESC='FiHealth Dashboard'

# Command line options
ACTION=

# Process command line
OPTERR=
OPTSTR=$(echo :-:$OPTS | sed 's/([a-zA-Z0-9]*)//g')
OPTHLP=$(sed -n '20,/^$/ { s/$0/'$NAME'/; s/^#[ ]\?//p }' $0)
while getopts $OPTSTR OPT; do while [ -z "$OPTERR" ]; do
case $OPT in
'h')	OPTERR="$OPTHLP";;
'?')	OPTERR="Unknown option -$OPTARG";;
':')	OPTERR="Missing value for option -$OPTARG";;
'-')	OPTLONG="${OPTARG%=*}";
	OPT=$(expr $OPTS : ".*\(.\)($OPTLONG):.*" '|' '?');
	if [ "$OPT" = '?' ]; then
		OPT=$(expr $OPTS : ".*\(.\)($OPTLONG).*" '|' '?')
		OPTARG=-$OPTLONG
	else
		OPTARG=$(echo =$OPTARG | cut -d= -f3)
		[ -z "$OPTARG" ] && { OPTARG=-$OPTLONG; OPT=':'; }
	fi;
	continue;;
esac; break; done; done
shift $(expr $OPTIND - 1)
ACTION=$(expr "$1" : "^\(start\|stop\|restart\|status\)$") && shift
[ -z "$OPTERR" -a -z "$ACTION" ] && OPTERR="$OPTHLP"
[ -z "$OPTERR" -a -n "$*" ] && OPTERR="Too many arguments"
[ -n "$OPTERR" ] && {
	[ "$OPTERR" != "$OPTHLP" ] && OPTERR="${OPTERR}\nTry \`$NAME --help'"
	TAB=4; LEN=$(echo "$OPTERR" | awk -F'\t' '/ .+\t/ {print $1}' | wc -L)
	TABSTOPS=$TAB,$(((2+LEN/TAB)*TAB)); WIDTH=${COLUMNS:-$(tput cols)}
	printf "$OPTERR" | tr -s '\t' | expand -t$TABSTOPS | fmt -$WIDTH -s 1>&2
	exit 1
}

# Main
BASEDIR=$(readlink -f $(dirname $0)/..)
SERVER=$BASEDIR/lib/www.js

# Auxiliary files will be relative to $BASEDIR and $HOME, by default
LOGFILE=${LOGFILE:-$BASEDIR/dashboard.log}
PIDFILE=${PIDFILE:-$HOME/.forever/pids/dashboard.pid}

# Perform action
case "$ACTION" in
start)
	forever -o $LOGFILE -e $LOGFILE --pidFile=$PIDFILE start $SERVER
	;;

stop)
	forever stop $SERVER
	;;

restart)
	forever restart $SERVER
	;;

status)
	if [ -r $PIDFILE ] && ps -p $(cat $PIDFILE) >/dev/null; then
		echo "$DESC is running: $(cat $PIDFILE)"
	else
		echo "$DESC is NOT running"
	fi
	;;
esac
